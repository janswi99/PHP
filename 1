#include <iostream>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <iomanip>

using namespace std;

void losowanie(int *T, int n){
    srand(time(NULL));
    for(int i=0; i<n; i++)
        T[i]=rand()%11-5;
}

void wypisywanie(int *T, int n){
    for(int i=0; i<n; i++)
        cout << T[i] << endl;
}

int suma(int *T, int n){
    int maks=T[0], suma;
    for(int i=0; i<n; i++){
        suma=T[i];
        if(suma>maks)
            maks=suma;
        for(int j=i+1; j<n; j++){
            suma=suma+T[j];
            if(suma>maks)
                maks=suma;
        }
    }
    cout << endl << maks;
}

int lider(){

}

void sito(){
    int n, pierwiastek;
    cout << "Podaj gorna granice zakresu: "; cin >> n;
    int *S = new int [n+1];
    pierwiastek=sqrt(n);

    for(int i=2; i<=n; i++)
        S[i]=i;

    for(int i=2; i<=pierwiastek; i++){
        if(S[i]!=0)
            for(int j=2*i; j<=n; j+=i)
                S[j]=0;
    }

    for(int i=2; i<=n; i++)
        if(S[i]!=0)
            cout << S[i] << endl;
}

bool ros(int *T, int n){
    for(int i=0; i<n-1; i++){
        if(T[i]>=T[i+1])
            return false;
    return true;
    }
}

bool mal(int *T, int n){
    for(int i=0; i<n-1; i++){
        if(T[i]<=T[i+1])
            return false;
    return true;
    }
}

bool nieros(int *T, int n){
    for(int i=0; i<n-1; i++){
        if(T[i]>T[i+1])
            return false;
    return true;
    }
}

bool niemal(int *T, int n){
    for(int i=0; i<n-1; i++){
        if(T[i]<T[i+1])
            return false;
    return true;
    }
}

bool staly(int *T, int n){
    for(int i=0; i<n-1; i++){
        if(T[i]!=T[i+1])
            return false;
    return true;
    }
}

int potega(int p, int w){
    if(w==0)
        return 1;
    else
        return p*potega(p, w-1);
}

int fib(int n){
    if(n==1 || n==2)
        return 1;
    else
        return fib(n-1)+fib(n-2);
}

int silnia(int n){
    if(n==0)
        return 1;
    else
        return silnia(n-1)*n;
}

int main()
{
    while(true){
        int wybor;
        int s, f, p, w, rozmiar, ilosc;
        cout << "SPRAWDZIAN \n---------\n\n";
        cout << "1. Rekurencja\n";
        cout << "2. Monotonicznosc\n";
        cout << "3. Sito Eratostenesa\n";
        cout << "4. Lider w zbiorze\n";
        cout << "5. Najlepsza suma\n\n";
        cout << "Co wybierasz? ";
        cin >> wybor;
        switch(wybor){
        case 1: //rekurencja
            {
                cout << "Podaj z jakiej liczby chcesz otrzymac wynik silni: "; cin >> s;
                cout << silnia(s) << endl;

                cout << "Podaj ktory wyraz ciagu Fibonacciego chcesz otrzymac: "; cin >> f;
                cout << fib(f) << endl;

                cout << "Podaj podstawe potegi: "; cin >> p;
                cout << "Podaj wykladnik potegi: "; cin >> w;
                cout << potega(p, w) << endl << endl;

                break;
            }
        case 2: // monotonicznosc
            {
                cout << "Podaj rozmiar tablicy: "; cin >> rozmiar;
                int *M = new int [rozmiar];
                losowanie(M, rozmiar);
                wypisywanie(M, rozmiar);
                if(staly(M, 5))
                    cout << "Staly" << endl << endl;
                else if(ros(M, 5))
                    cout << "Rosnacy" << endl << endl;
                else if(mal(M, 5))
                    cout << "Malejacy" << endl << endl;
                else if(nieros(M, 5))
                    cout << "Nierosnacy" << endl << endl;
                else if(niemal(M, 5))
                    cout << "Niemalejacy" << endl << endl;
                else
                    cout << "Niemonotoniczny" << endl << endl;

                break;
            }
        case 3:
            // sito_eratostenesa
            {
                sito();
                break;
            }
        case 4:
            // lider_w_zbiorze
            /*{
                cout << "Podaj rozmiar tablicy: "; cin >> rozmiar;
                int *L = new int [rozmiar];
                losowanie(L, rozmiar);
                for(int i=0; i<rozmiar; i++){
                    ilosc=0;
                    for(int j=0; j<rozmiar; j++)
                        if(L[j]==L[i])
                            ilosc++;
                    if(ilosc>rozmiar/2) cout << L[i] << "to lider";
                }
                break;
            }*/
        case 5:
            // najlepsza_suma
            {
                cout << "Podaj rozmiar tablicy: "; cin >> rozmiar;
                int *N = new int [rozmiar];
                srand(time(NULL));
                for (int i=0; i<rozmiar; i++){
                    N[i]=rand()%51-25;
                    cout << setw(4) << N[i] << endl;
                }
                suma(N, rozmiar);
                break;
            }
        }
    }
    return 0;
}
